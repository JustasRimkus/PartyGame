// <auto-generated />
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(PartyGameContext))]
    [Migration("20210523142636_New_Data")]
    partial class New_Data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Popularity = 27,
                            QuestionId = 1,
                            Text = "Haunted House"
                        },
                        new
                        {
                            Id = 2,
                            Popularity = 11,
                            QuestionId = 1,
                            Text = "Jail"
                        },
                        new
                        {
                            Id = 3,
                            Popularity = 8,
                            QuestionId = 1,
                            Text = "Doghouse"
                        },
                        new
                        {
                            Id = 4,
                            Popularity = 7,
                            QuestionId = 1,
                            Text = "Drug House"
                        },
                        new
                        {
                            Id = 5,
                            Popularity = 7,
                            QuestionId = 1,
                            Text = "Small House"
                        },
                        new
                        {
                            Id = 6,
                            Popularity = 6,
                            QuestionId = 1,
                            Text = "Glass House"
                        },
                        new
                        {
                            Id = 7,
                            Popularity = 5,
                            QuestionId = 1,
                            Text = "Cat House"
                        },
                        new
                        {
                            Id = 8,
                            Popularity = 5,
                            QuestionId = 1,
                            Text = "Outhouse"
                        },
                        new
                        {
                            Id = 9,
                            Popularity = 33,
                            QuestionId = 2,
                            Text = "Twilight"
                        },
                        new
                        {
                            Id = 10,
                            Popularity = 29,
                            QuestionId = 2,
                            Text = "Blood"
                        },
                        new
                        {
                            Id = 11,
                            Popularity = 9,
                            QuestionId = 2,
                            Text = "Garlic"
                        },
                        new
                        {
                            Id = 12,
                            Popularity = 7,
                            QuestionId = 2,
                            Text = "Bat"
                        },
                        new
                        {
                            Id = 13,
                            Popularity = 7,
                            QuestionId = 2,
                            Text = "Cape"
                        },
                        new
                        {
                            Id = 14,
                            Popularity = 5,
                            QuestionId = 2,
                            Text = "Dracula"
                        },
                        new
                        {
                            Id = 15,
                            Popularity = 4,
                            QuestionId = 2,
                            Text = "Fangs"
                        },
                        new
                        {
                            Id = 16,
                            Popularity = 4,
                            QuestionId = 2,
                            Text = "Halloween"
                        },
                        new
                        {
                            Id = 17,
                            Popularity = 32,
                            QuestionId = 3,
                            Text = "Buns"
                        },
                        new
                        {
                            Id = 18,
                            Popularity = 9,
                            QuestionId = 3,
                            Text = "His Oven"
                        },
                        new
                        {
                            Id = 19,
                            Popularity = 9,
                            QuestionId = 3,
                            Text = "Sweetie"
                        },
                        new
                        {
                            Id = 20,
                            Popularity = 8,
                            QuestionId = 3,
                            Text = "Cupcake"
                        },
                        new
                        {
                            Id = 21,
                            Popularity = 7,
                            QuestionId = 3,
                            Text = "Muffin"
                        },
                        new
                        {
                            Id = 22,
                            Popularity = 5,
                            QuestionId = 3,
                            Text = "Sugar"
                        },
                        new
                        {
                            Id = 23,
                            Popularity = 5,
                            QuestionId = 3,
                            Text = "Donut"
                        },
                        new
                        {
                            Id = 24,
                            Popularity = 4,
                            QuestionId = 3,
                            Text = "Doughy"
                        },
                        new
                        {
                            Id = 25,
                            Popularity = 32,
                            QuestionId = 4,
                            Text = "Selection"
                        },
                        new
                        {
                            Id = 26,
                            Popularity = 23,
                            QuestionId = 4,
                            Text = "Erection"
                        },
                        new
                        {
                            Id = 27,
                            Popularity = 6,
                            QuestionId = 4,
                            Text = "Perfection"
                        },
                        new
                        {
                            Id = 28,
                            Popularity = 6,
                            QuestionId = 4,
                            Text = "Detection"
                        },
                        new
                        {
                            Id = 29,
                            Popularity = 5,
                            QuestionId = 4,
                            Text = "Protection"
                        },
                        new
                        {
                            Id = 30,
                            Popularity = 4,
                            QuestionId = 4,
                            Text = "Rejectionr"
                        },
                        new
                        {
                            Id = 31,
                            Popularity = 4,
                            QuestionId = 4,
                            Text = "Collection"
                        },
                        new
                        {
                            Id = 32,
                            Popularity = 4,
                            QuestionId = 4,
                            Text = "Section"
                        },
                        new
                        {
                            Id = 33,
                            Popularity = 62,
                            QuestionId = 5,
                            Text = "Sun"
                        },
                        new
                        {
                            Id = 34,
                            Popularity = 14,
                            QuestionId = 5,
                            Text = "Fire"
                        },
                        new
                        {
                            Id = 35,
                            Popularity = 3,
                            QuestionId = 5,
                            Text = "Blow Dryers"
                        },
                        new
                        {
                            Id = 36,
                            Popularity = 3,
                            QuestionId = 5,
                            Text = "Rain"
                        },
                        new
                        {
                            Id = 37,
                            Popularity = 3,
                            QuestionId = 5,
                            Text = "Shovel"
                        },
                        new
                        {
                            Id = 38,
                            Popularity = 2,
                            QuestionId = 5,
                            Text = "Drought"
                        },
                        new
                        {
                            Id = 39,
                            Popularity = 2,
                            QuestionId = 5,
                            Text = "Snowballs"
                        },
                        new
                        {
                            Id = 40,
                            Popularity = 2,
                            QuestionId = 5,
                            Text = "Peeing Dogs"
                        });
                });

            modelBuilder.Entity("Database.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Name a House You Never Want to Be In: "
                        },
                        new
                        {
                            Id = 2,
                            Text = "Name Something Associated with Vampires: "
                        },
                        new
                        {
                            Id = 3,
                            Text = "Name Something in a Bakery a Baker Might Call His Wife: "
                        },
                        new
                        {
                            Id = 4,
                            Text = "Tell Me A Word That Rhymes with “Election”: "
                        },
                        new
                        {
                            Id = 5,
                            Text = "Name Something Snowmen Might Have Nightmares About: "
                        });
                });

            modelBuilder.Entity("Database.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AVGGameScore")
                        .HasColumnType("int");

                    b.Property<int>("BestGame")
                        .HasColumnType("int");

                    b.Property<int>("BestRound")
                        .HasColumnType("int");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<int>("WinningPrecentage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Status");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AVGGameScore = 0,
                            BestGame = 0,
                            BestRound = 0,
                            GamesPlayed = 0,
                            GamesWon = 0,
                            WinningPrecentage = 0
                        });
                });

            modelBuilder.Entity("Database.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StatusId")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "maintianer@partygame.com",
                            Hash = "mBYs2jkBi9RZupsILs74MfO/nRx9dVw31zjBJ4KQXefiBbS2",
                            Role = 1,
                            StatusId = 1,
                            Username = "Maintainer"
                        });
                });

            modelBuilder.Entity("Database.Models.Answer", b =>
                {
                    b.HasOne("Database.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("Database.Models.User", b =>
                {
                    b.HasOne("Database.Models.Status", "Status")
                        .WithOne("User")
                        .HasForeignKey("Database.Models.User", "StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Database.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("Database.Models.Status", b =>
                {
                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
